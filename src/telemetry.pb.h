/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_TELEMETRY_PB_H_INCLUDED
#define PB_TELEMETRY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _GPSPacket {
    double lat;
    double lng;
    double alt;
    double speed;
    double course;
    uint32_t satellites;
} GPSPacket;

typedef struct _TemperaturePacket {
    float coolant;
    float air;
    float fuel;
    float oil;
} TemperaturePacket;

typedef struct _SwitchesPacket {
    bool neutral;
    bool gear_switch;
    bool clutch;
    bool oil_pressure_light;
    bool flat_shift;
    bool check_engine_light;
} SwitchesPacket;

typedef struct _EnginePacket {
    uint32_t rpm;
    float manifold_pressure;
    float throttle_position;
    float fuel_pressure;
    float oil_pressure;
    float engine_demand;
    float sensor_1;
    float sensor_2;
    float overall;
    float vehicle_speed;
    float battery_voltage;
    float barometric_pressure;
    bool has_temperature;
    TemperaturePacket temperature;
    bool has_switches;
    SwitchesPacket switches;
    float steering_angle;
    float travel_front_left;
    float travel_rear_left;
    float travel_front_right;
    float travel_rear_right;
    uint32_t gear;
    uint32_t gear_selector_position;
} EnginePacket;

typedef struct _TelemetryPacket {
    uint32_t timestamp;
    float voltage;
    bool can_connected;
    uint32_t can_messages;
    bool gps_valid;
    bool has_gps;
    GPSPacket gps;
    bool has_engine;
    EnginePacket engine;
} TelemetryPacket;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define GPSPacket_init_default                   {0, 0, 0, 0, 0, 0}
#define TemperaturePacket_init_default           {0, 0, 0, 0}
#define SwitchesPacket_init_default              {0, 0, 0, 0, 0, 0}
#define EnginePacket_init_default                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, TemperaturePacket_init_default, false, SwitchesPacket_init_default, 0, 0, 0, 0, 0, 0, 0}
#define TelemetryPacket_init_default             {0, 0, 0, 0, 0, false, GPSPacket_init_default, false, EnginePacket_init_default}
#define GPSPacket_init_zero                      {0, 0, 0, 0, 0, 0}
#define TemperaturePacket_init_zero              {0, 0, 0, 0}
#define SwitchesPacket_init_zero                 {0, 0, 0, 0, 0, 0}
#define EnginePacket_init_zero                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, TemperaturePacket_init_zero, false, SwitchesPacket_init_zero, 0, 0, 0, 0, 0, 0, 0}
#define TelemetryPacket_init_zero                {0, 0, 0, 0, 0, false, GPSPacket_init_zero, false, EnginePacket_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define GPSPacket_lat_tag                        1
#define GPSPacket_lng_tag                        2
#define GPSPacket_alt_tag                        3
#define GPSPacket_speed_tag                      4
#define GPSPacket_course_tag                     5
#define GPSPacket_satellites_tag                 6
#define TemperaturePacket_coolant_tag            1
#define TemperaturePacket_air_tag                2
#define TemperaturePacket_fuel_tag               3
#define TemperaturePacket_oil_tag                4
#define SwitchesPacket_neutral_tag               1
#define SwitchesPacket_gear_switch_tag           2
#define SwitchesPacket_clutch_tag                3
#define SwitchesPacket_oil_pressure_light_tag    4
#define SwitchesPacket_flat_shift_tag            5
#define SwitchesPacket_check_engine_light_tag    6
#define EnginePacket_rpm_tag                     1
#define EnginePacket_manifold_pressure_tag       2
#define EnginePacket_throttle_position_tag       3
#define EnginePacket_fuel_pressure_tag           5
#define EnginePacket_oil_pressure_tag            6
#define EnginePacket_engine_demand_tag           7
#define EnginePacket_sensor_1_tag                8
#define EnginePacket_sensor_2_tag                9
#define EnginePacket_overall_tag                 10
#define EnginePacket_vehicle_speed_tag           11
#define EnginePacket_battery_voltage_tag         12
#define EnginePacket_barometric_pressure_tag     13
#define EnginePacket_temperature_tag             14
#define EnginePacket_switches_tag                15
#define EnginePacket_steering_angle_tag          16
#define EnginePacket_travel_front_left_tag       17
#define EnginePacket_travel_rear_left_tag        18
#define EnginePacket_travel_front_right_tag      19
#define EnginePacket_travel_rear_right_tag       20
#define EnginePacket_gear_tag                    21
#define EnginePacket_gear_selector_position_tag  22
#define TelemetryPacket_timestamp_tag            1
#define TelemetryPacket_voltage_tag              2
#define TelemetryPacket_can_connected_tag        3
#define TelemetryPacket_can_messages_tag         4
#define TelemetryPacket_gps_valid_tag            5
#define TelemetryPacket_gps_tag                  6
#define TelemetryPacket_engine_tag               7

/* Struct field encoding specification for nanopb */
#define GPSPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   lat,               1) \
X(a, STATIC,   SINGULAR, DOUBLE,   lng,               2) \
X(a, STATIC,   SINGULAR, DOUBLE,   alt,               3) \
X(a, STATIC,   SINGULAR, DOUBLE,   speed,             4) \
X(a, STATIC,   SINGULAR, DOUBLE,   course,            5) \
X(a, STATIC,   SINGULAR, UINT32,   satellites,        6)
#define GPSPacket_CALLBACK NULL
#define GPSPacket_DEFAULT NULL

#define TemperaturePacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    coolant,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    air,               2) \
X(a, STATIC,   SINGULAR, FLOAT,    fuel,              3) \
X(a, STATIC,   SINGULAR, FLOAT,    oil,               4)
#define TemperaturePacket_CALLBACK NULL
#define TemperaturePacket_DEFAULT NULL

#define SwitchesPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     neutral,           1) \
X(a, STATIC,   SINGULAR, BOOL,     gear_switch,       2) \
X(a, STATIC,   SINGULAR, BOOL,     clutch,            3) \
X(a, STATIC,   SINGULAR, BOOL,     oil_pressure_light,   4) \
X(a, STATIC,   SINGULAR, BOOL,     flat_shift,        5) \
X(a, STATIC,   SINGULAR, BOOL,     check_engine_light,   6)
#define SwitchesPacket_CALLBACK NULL
#define SwitchesPacket_DEFAULT NULL

#define EnginePacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   rpm,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    manifold_pressure,   2) \
X(a, STATIC,   SINGULAR, FLOAT,    throttle_position,   3) \
X(a, STATIC,   SINGULAR, FLOAT,    fuel_pressure,     5) \
X(a, STATIC,   SINGULAR, FLOAT,    oil_pressure,      6) \
X(a, STATIC,   SINGULAR, FLOAT,    engine_demand,     7) \
X(a, STATIC,   SINGULAR, FLOAT,    sensor_1,          8) \
X(a, STATIC,   SINGULAR, FLOAT,    sensor_2,          9) \
X(a, STATIC,   SINGULAR, FLOAT,    overall,          10) \
X(a, STATIC,   SINGULAR, FLOAT,    vehicle_speed,    11) \
X(a, STATIC,   SINGULAR, FLOAT,    battery_voltage,  12) \
X(a, STATIC,   SINGULAR, FLOAT,    barometric_pressure,  13) \
X(a, STATIC,   OPTIONAL, MESSAGE,  temperature,      14) \
X(a, STATIC,   OPTIONAL, MESSAGE,  switches,         15) \
X(a, STATIC,   SINGULAR, FLOAT,    steering_angle,   16) \
X(a, STATIC,   SINGULAR, FLOAT,    travel_front_left,  17) \
X(a, STATIC,   SINGULAR, FLOAT,    travel_rear_left,  18) \
X(a, STATIC,   SINGULAR, FLOAT,    travel_front_right,  19) \
X(a, STATIC,   SINGULAR, FLOAT,    travel_rear_right,  20) \
X(a, STATIC,   SINGULAR, UINT32,   gear,             21) \
X(a, STATIC,   SINGULAR, UINT32,   gear_selector_position,  22)
#define EnginePacket_CALLBACK NULL
#define EnginePacket_DEFAULT NULL
#define EnginePacket_temperature_MSGTYPE TemperaturePacket
#define EnginePacket_switches_MSGTYPE SwitchesPacket

#define TelemetryPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timestamp,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           2) \
X(a, STATIC,   SINGULAR, BOOL,     can_connected,     3) \
X(a, STATIC,   SINGULAR, UINT32,   can_messages,      4) \
X(a, STATIC,   SINGULAR, BOOL,     gps_valid,         5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gps,               6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  engine,            7)
#define TelemetryPacket_CALLBACK NULL
#define TelemetryPacket_DEFAULT NULL
#define TelemetryPacket_gps_MSGTYPE GPSPacket
#define TelemetryPacket_engine_MSGTYPE EnginePacket

extern const pb_msgdesc_t GPSPacket_msg;
extern const pb_msgdesc_t TemperaturePacket_msg;
extern const pb_msgdesc_t SwitchesPacket_msg;
extern const pb_msgdesc_t EnginePacket_msg;
extern const pb_msgdesc_t TelemetryPacket_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define GPSPacket_fields &GPSPacket_msg
#define TemperaturePacket_fields &TemperaturePacket_msg
#define SwitchesPacket_fields &SwitchesPacket_msg
#define EnginePacket_fields &EnginePacket_msg
#define TelemetryPacket_fields &TelemetryPacket_msg

/* Maximum encoded size of messages (where known) */
#define EnginePacket_size                        141
#define GPSPacket_size                           51
#define SwitchesPacket_size                      12
#define TELEMETRY_PB_H_MAX_SIZE                  TelemetryPacket_size
#define TelemetryPacket_size                     218
#define TemperaturePacket_size                   20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
